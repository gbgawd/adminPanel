{"remainingRequest":"/home/gb/Documents/GitHub/adminPanel/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gb/Documents/GitHub/adminPanel/src/views/icons/Brands.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/gb/Documents/GitHub/adminPanel/src/views/icons/Brands.vue","mtime":1615553712000},{"path":"/home/gb/Documents/GitHub/adminPanel/node_modules/babel-loader/lib/index.js","mtime":1627966551670},{"path":"/home/gb/Documents/GitHub/adminPanel/node_modules/cache-loader/dist/cjs.js","mtime":1627966551510},{"path":"/home/gb/Documents/GitHub/adminPanel/node_modules/vue-loader/lib/index.js","mtime":1627966549170}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGJyYW5kU2V0IGFzIGJyYW5kcyB9IGZyb20gJ0Bjb3JldWkvaWNvbnMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQnJhbmRzJywKICBicmFuZHMsCiAgbWV0aG9kczogewogICAgdG9LZWJhYkNhc2UgKHN0cikgewogICAgICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbYS16XSkoW0EtWjAtOV0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Brands.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Brands.vue","sourceRoot":"src/views/icons","sourcesContent":["<template>\n  <div>\n    <CCard>\n      <CCardHeader>\n        <CIcon name=\"cil-basket\"/>Brand icons\n      </CCardHeader>\n      <CCardBody>\n        <CRow class=\"text-center\">\n          <template v-for=\"(brand, brandName) in $options.brands\">\n            <CCol\n              class=\"mb-5\"\n              col=\"3\"\n              sm=\"2\"\n              :key=\"brandName\"\n            >\n              <CIcon :height=\"42\" :content=\"brand\"/>\n              <div>{{toKebabCase(brandName)}}</div>\n            </CCol>\n          </template>\n        </CRow>\n      </CCardBody>\n    </CCard>\n  </div>\n</template>\n\n<script>\nimport { brandSet as brands } from '@coreui/icons'\nexport default {\n  name: 'Brands',\n  brands,\n  methods: {\n    toKebabCase (str) {\n      return str.replace(/([a-z])([A-Z0-9])/g, '$1-$2').toLowerCase()\n    }\n  }\n}\n</script>\n"]}]}